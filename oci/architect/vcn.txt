##### CIDR

- 0.0.0.0/0 => all IP addresses
= 0.0.0.0 network
= 255.255.255.255 broadcast

- 10.0.0.0/8 (Class A) 256^3 hosts
= 10.0.0.0 network
= 10.255.255.255 broadcast

- 192.168/16 (Class B) 256^2 hosts
= 192.168.0.0 network
= 192.168.255.255 broadcast

- 172.16/24 (Class C) - 256 hosts
= 172.16.0.0 network
= 172.16.0.255 broadcast

- subnets
- 192.168/27 (8.8.8.3) => 2^3 = 8 subnets
- 32 - 27 = 5 => 2^5 = 32 hosts per subnet
= [192.168.0.1 - 192.186.0.31]
= [192.168.0.32 - 192.186.0.63]
= [192.168.0.64 - 192.186.0.95]
= [192.168.0.96 - 192.186.0.127]
= [192.168.0.128 - 192.186.0.159]
= [192.168.0.160 - 192.186.0.191]
= [192.168.0.192 - 192.186.0.223]
= [192.168.0.224 - 192.186.0.255]

##### VCN

- Private IPs; 10.0.0.0/8, 172.16/12, 192.168/16
! OCI => range from /16 (256^2 hosts) to /30 (2^6 subnets with 2^2 hosts each)
! OCI => reserves first 2 and last IPs (3 IPs!)

- Regional services (spans all over the region with or without multiple ADs)
- Subnet can be AD specific or regional
- Subnet Private => only Private IPs
- Subnet Public => contains both Private and Public IPs
- VNIC => Virtual Network Interface Card connects resources (instances) to the VCN as endpoints

##### IP Adresses

- Every instance will get a mandatory Private IP inside a subnet (Primary VNIC)
- A primary VNIC has a primary private IP and 31 private secondary IPs
- Instances can have a secondary VNIC (connected to different subnets/VCNs)
- Public IPs are optional
- Possible to assign a given resource multiple public IPs across one or more VNICs
- Public IP Ephemeral => temp, instance lifetime. Assigned only to primary private IP
- Public IP Reserved => persitent, can be assigned/reassigned (31 times)

##### Route Table

- Mapping rules of IP packets traveling out the VCN
- Each rule specifies:
= Destination CIDR block
= Route target (next hop)

##### Internet Gateway

- In/out from Public Subnet
- only 1 per VCN
- After creation the VCN route table needs to get updated with 0.0.0.0/0 rule

##### NAT Gateway

- Private Subnet: host can initiate connections (outbound connections without inbound connections)
- Accepts IP packets from outside VCN (internet) but no Public IP assigned
- After creation the VCN route table needs to get updated with 0.0.0.0/0 rule
- 1 or + per VCN but a subnet only routes traffic to a single NAT Gateway

##### Service Gateway

- Resources in VCN access public OCI services such as Object Storage w/o Internet or NAT Gateways
- Uses the private IP addresses
- Only travels within OCI network fabric: never traverses the internet
- After creation the VCN route table needs to get updated with one service label rule:
= OCI <region> Object Storage
= All <region> Services

##### Dynamic Routing Gateway

- Private traffic between VCN and destinations different than Internet (on-premises)
- Can be achieved via IPSec or FastConnect
- After creation the VCN route table needs to get updated with 0.0.0.0/0 rule
- 1:1 relationship with VCN

##### Demo 1

- Create VCN 10.0.0.0/16
- Create Public Subnet 10.0.1.0/24
- Create Compute Instance on VCN/Subnet with Public IP addr
- Create Internet Gateway
- Edit VCN Route Table rules adding CIDR 0.0.0.0/0 to the created Internet Gateway
- ssh to created Instance and install NGINX
= sudo yum install nginx
= sudo systemctl enable --now nginx.service
= sudo systemctl status nginx
= sudo firewall-cmd --add-service=http --permanent
= sudo firewall-cmd --reload
- Add Ingress Rule to the VCN Security list accepting TCP connections on port 80 incoming from 0.0.0.0/0
- Hit the Instance public IP in a browser

##### Demo 2

- Create new Route Table to private Subnet
- Create new Security List to private Subnet
- Create new Private Subnet referencing both Route Table and Security List created 10.0.2.0/24
- Create new Compute Instance on Private Subnet
- Add Ingress Rule to the VCN Security list accepting all protocols incoming from 10.0.1.0/24
- Add Egress Rule to the VCN Security list allowing all protocols to 0.0.0.0/0
- ssh proxy command to created Instance
= ssh -t -o ProxyCommand='ssh -i ~/.ssh/id_rsa opc@PublicIP -W %h:%p %r' -i ~/.ssh/id_rsa opc@PrivateIP
- ping www.google.com
- Create NAT Gateway
- Edit VCN Route Table rules adding CIDR 0.0.0.0/0 to the created NAT Gateway
- verify the private instance can now ping google

  
##### Peering

- Local connecting multiple VCNs within region - can communicate without using public Internet
= Local Peering Gateway is needed to each connected VCN
= Route Table targets should be targeting the other VCN CIDR
= Need to open virtual firewalls
! VCNs connected via Local peering cannot have overlaping CIDRs
! Local peering is not transitive: if 1 <-> 2 and 2 <-> 3, 1 is not <-> 3
- Remote Peering connects VCNs in different regions through Oracle Backbone
= Needs a Dynamic Route Gateway to each connected VCN
= Route Table targets should be aiming the other VCN CIDR
! VCNs connected via Local peering cannot have overlaping CIDRs
! Remote peering is not transitive: if 1 <-> 2 and 2 <-> 3, 1 is not <-> 3

##### Demo Local Peering Gateway

- Create another VCN 192.168.0.0/24
- Create Private Subnet 192.168.0.0/27
- Add Security List Ingress Rule on VCN 10.0.0.0/16 allowing all protocols from 192.168.0.0/24
- Create a Local Peering Gateway in VCN 10.0.0.0/16
- Add a Route Table rule for the Local Peering Gateway in 10.0.0.0/16 targeting CIDR 192.168.0.0/24
- Add Security List Ingress Rule on VCN 192.168.0.0/24 allowing all protocols from 10.0.0.0/16
- Create a Local Peering Gateway in VCN 192.168.0.0/24
- Add a Route Table rule for the Local Peering Gateway in 192.168.0.0/24 targeting CIDR 10.0.0.0/16
- Establish Peering Connection on Local Peering Gateway on VCN 192.168.0.0/24
= Pick the other VCN 10.0.0.0/16
= Pick the Unpeered Peer Gateway created on 10.0.0.0/16

##### Security List

- Firewall rules applied to all instances launched to a VCN
- Specifies types of traffic allowed in and out
- Can get associated at subnet creation process time or later
- Apply to given instances inside the same VCN or outside
- Stateful
= Connection Tracking: if a Ingress Stateful Rule is matched, an Egress rule is automatically applied
= Default SL are stateful
- Stateless
= Automatic response is not allowed
= Must create an stateless rule
= Use cases: Load balancer, Big Data => large number of connections

##### Network Security Group

- Provides Virtual Firewall to a set o cloud resources with the same security details
- Set of rules to specified VNICs within a VCN
- Differs from Security Lists once these are applied at subnet level 
= All the instances would have the same security posture
= NSG specifies different postures to different instances within the same Subnet
- You can specify a NSG as a source/target of another NSG
- OCI recommends NSG over SL
- If using both SL + NSG
= VNIC Rules = union(SL + NSG) rules

##### Demo Network Security Group

- Access VCN 10.0.0.0/16 and remove Security list Ingress Rule accepting TCP connections on port 80 incoming from 0.0.0.0/0
- Add a Network Security Group in VCN 10.0.0.0/16
= Specify ingress rule from CIDR 0.0.0.0/0 for TCP on port 80
- Edit public Compute Instance Primary VNIC Network Security Group
- Hit Public IP on browser






