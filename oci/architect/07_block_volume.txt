##### OCI Storage Services

- Local NVMe
= NVMe SSD based temp storage, non-persistent, survives reboots. Terabytes
= Big Data, OLTP, high performance workloads
- Block Volume
= NVMe SSD based block storage, durable (multiple copies in an AD), Petabytes
= Apps that require SAN like features (Oracle DB, VMW, Exchange)
- File Storage
= NFSv3 compatible file system, durable (multiple copies in an AD, Exabytes
= Apps that require shared file system (EBS, HPC)
- Object Storage
= Highly durable Object storage, highly durable (multiple copies across ADs), Petabytes
= Unstructed data such as ligs, images, videos
- Archive Storage
= Long term archival and backup, highly durable (multiple copies across ADs), Petabytes
= Long term archival and backup (Oracle DB backups)

##### Local NVMe (Ephemeral)

- BM and VM DenselO2 instance shapes include locally attached NVMe devices
- Can be used for workloads that have high storage performance requirements
- Locally attached SSDs are not protected and OCI provides no RAID, snapshots, backups capabilities for these devices
- Customers are reponsible for the durability of data on the local SSDs
- $ lsblk = should list the attached NVMe SSDs attached

- Protecting NVMe SSD Devices
= RAID 1
=> An exact copy or mirror of a data set on 2 or more disks
=> Cons: no parity (calculated value used ot reconstruct data after a failed)
= RAID 10
=> Stripes data across multiple mirrored (RAID 1) pairs.
=> As long as 1 disk in each mirrored pair is functional, data can be retrieved
= RAID 6
=> Block level striping with two parity blocks distributed across all member disks

- SLA for NVMe Performance
= Measured against 4k block sizes with 100% random write workload on Dense IO shapes
=> where the drive is in a steady-state of operation
= from VM.DenselO1.4 => minimun supported IOPS 200k
= to BM.DenselO2.52 => minimun supported IOPS 3MM

##### Block Volume Services

- Let you store data on block volumes independently and beyond the lifespan of compute instances
- Operates at the raw storage device level and manages data as a set of numbered, fixed size blocks (iSCSI)
- Can create, attach, connect, move volumes as needed to meet storage and application requirements
- Persistent and Durable Storage
- Expand an Instance Storage
- Instance Scaling

- Capacity = configurable from 50GB to 32TB (1GB Increments)
- Disk Type = NVMe SSD based
- IOPS = 2-75 IOPS/GB - up to 35K IOPS
- Throughput/Vol = up to 480 MB/s
- Latency = Sub-milisecond latencies
- Per-instance limits = 32 attachments/instance, up to 1PB (32GB x 32 volumes/instance)
- Durability = Multiples replicas across multiple storage servers within the AD
- Security  = Encrypted at rest and transit (Oracle managed keys or BYOK)

- Block Volume Elastic Performance
= Lower Cost
=> Not available for boot volumes
=> No separate VPU (Volume Performance Unit) charge
=> Throughput intensive workloads with large sequential I/O (streaming, log processing, data warehouse)
= Balanced (default)
=> Linear scaling - 60 IOPS/GB to 25k IOPS
=> Purchase 10 VPUs per GB/month
= Higher Performance
=> Linear scaling - 75 IOPS/GB to 35k IOPS
=> Purchase 20 VPUs per GB/month
=> Highest I/O requirements, best performance, large databases

- Creating and Attaching a Block Volume
= Paravirtualization
=> Light virtualization technique, VM uses hypervisor APIs to access remote storage directly as if it were local
= iSCSI
=> Uses the internal storage stack in the guest OS and netowrk hardware virtualization to access block volumes
=> Hypervisor is not involved in the iSCSI attachment process. Better, but more complex than paravirtualized
= By default all Block VLolumes are Read/Write
=> Can be read only to prevent against accidental modification

- Detaching and Deleting Block Volumes
= Can be disconnected and detached from an instance without data loss
= When attaching a volume to (another) instance do not format otherwise data will be lost
= Can be deleted when the volume is not longer needed
= Cannot undo a delete operation, permanently removed

- Block Volme Offline Resize
= Can resize Boot and Block Volumes (only increasing size, you cannot decrease):
=> Expand an existing volume in place with offline (detached) resizing
=> Restore from a volume backup to a larger volume
=> Clone an existing volume to a new, larger volume

##### Block Volume Demo

- Access OCI Console >> Block Storage >> Block Volumes
- Click Create Block Volume
- Type in a name and pick a Compartment
- Choose an AD (if in a multi-Availability Domain)
- Pick a size (from 50GB to 32TB) - 100GB in this case
- Pick a volume performance depending on the use case of the Block Volume - balanced in this case
- Choose an Encryption option (Oracle managed or BYOK) - Oracle in this case
- Click Create

- On the Block Volume detail, browse the Attached Instances
- Click on Attach to Instance
- Choose Attachment Type - iSCSI in this case (more complex to attach but no overhead)
- Choose and Access type - Read/Write in this case. Options are:
= Read/Write
= Read/Write - Shareable => read/write a block volume which can be shared among different instances
= Read-Only - Shareable
- Select Instance in Compartment or type in instance OCID
- Select a device path (depends on the instance type)
= normally iSCSI will be /dev/oracleoci/oraclevd[a-z]
- Click Attach

- Browse to Compute Instance details
- Browse to Attached Block Volumes
- On the created BV context menu click on iSCSI Commands & Information
- Copy Attach commands
- ssh to instance
- run copied commands
- $ lsblk
- ll /dev/oracleoci/oraclevd*
- sudo fdisk -l /dev/oracleoci/oraclevdb
- sudo mkfs -t ext4 /dev/oracleoci/oraclevdb
- sudo mkdir /disk1
- sudo mount /dev/oracleoci/oraclevdb /disk1

- Go back to OCI Console
- Browse created Block Volume details
- Click Change Volume Performance
- Pick Higher Performance and click Change Performance

- Browse to Block Volume Backups
- Click Create Block Volume Backup
- Type in a name
- Choose a backup type (incremental or full)
- Click create

- Browse to Block Volume Clones
- Click Create Clone
- Type in a name
- Choose Compartment
- Check Custom Block volume, getting 200GB
- Click create and notice the error mesage:
= Backups and clones are mutually exclusive and cannot work at the same time

- Browse created Block Volume details
- On the created BV context menu click on Detach from Instance
- Wait for full detaching
- Click on Block Volume Resize
- Pick 200GB
- Click Resize

##### Backup and Restoration

- Complete point-in-time snapshot copy
- Encrypted and stored in Object Storage Service, can be restored as new volumes to any AD within the Region
- Can copy block volume backups from one region to another
- While backup is performed in background asynchronously the app continue to access data w/o interruption
- 2TB backed up for 1st time = ~30min
- 50GB boot volume backed up for 1st time = ~few min.
- 2 types of backups:
= On demand => one-off block volume backup, can be Incremental or Full
= Automated policy-based => backups on schedule and retain on selected backup policy.
= 3 diff policies:
=> Bronze: monthly incremental backups,retained for 12 months + fully year backup retained for 5 years
=> Silver: weekly incremental backups, retained for 4 weeks + Bronze
=> Gold: daily incremental backups, retained for 7 days + Silver + Bronze
= Custom backup policy NOT available

##### Clone and Volume Group

- Allows copying an entire existing block volume to a new volume without needing a Backup - Restore process
- Point-in-time direct disk-to-disk deep copy of an entire volume
- Operation is immediate, actual data copying happens in the background and takes ~15 min per 1TB
- Can only be created in the same AD with no need to dettach from the source instance
- CANNOT be copied to another region (unlike backups)
- Can be attached and used as a regular volume after its status changes from PROVISIONING to AVAILABLE
- Clone and Backup are mutually exclusive
= If the source volume is attached => 1 clone at a time
= If the source volume is detached => up to 10 clones simultaneously

- Volume Groups
= Group together Block and Boot Volumes from multiple Compartments across multiple Instances
= Create Volume group Backups and Clones that are point-in-time and crash-consistent
= Manually trigger a Full or Incremental backup of all volumes in a Volume group
= Ideal for the protection and lifecycle management of enterprise apps (multiple volumes and instances)
= No additional cost

##### Boot Volumes

- A Compute instance is launched using OS image stored on a remote boot volume
- Created automatically and associated with an instance (for the instance lifespan)
- Are encrypted, have faster performance, lower launch times, and higher durability for BM and VM instances
- Launch another instance with a boot volume:
= Create a Custom Image of the boot volume and use it to launch a brand new Instance
= Launch a new Instance directly from the detached Boot Volume (if a Custom Image is undesired)
- Delete Boot Volume
= Can delete a detached Boot Volume only
= Optionally choose to automatically delete the BV when terminating an Instance
- Possible to take a manual Backup, assign Backup Policy, Create Clone of Boot Volumes

! One way of troubleshooting a failing Boot Volume is to attach it as a data volume in another Instance
! First detach the Boot Volume from the current Instance
! Then attach the faulty Boot Volume as a Block Volume to a new Instance

- Custom Boot Volumes
= Option to specify a custom boot volume size
= Must extend first the root (linux) or system (Windows) partition
= Default in Linux is 46.6GB
= Default in Windows is 256GB
= Can go up to 32TB
